---
// Blog Posts grid Section
// ------------
// Description: A grid of blog posts sorted by date in a 3 column layout.
// Properties:
// - data: An array of blog posts

// Components
// - Layout
import Section from '../../../components/ui/Section.astro'
import Row from '../../../components/ui/Row.astro'
import Col from '../../../components/ui/Col.astro'
// - UI
import Post from '../../../components/ui/cards/BlogCard.astro'
import TagNavigation from '../../../components/ui/blog/TagNavigation.astro'

// Props
type Props = {
	data: any
	type: string,
	isArticle?: boolean
}
const { data: allPosts, type: type, isArticle: isArticle } = Astro.props

// Function to sort posts by date
// const sortedPosts = allPosts.sort((a: any, b: any) => {
// 	return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
// })
---

<Section>
	<Row>
		<Col span="12">
			<TagNavigation type={type}/>
		</Col>
		{
			allPosts.map((post: any) => (
				<Col span="4" spanMd="6">
					<Post
						link={`/${post.slug}`}
						title={post.data.title}
						subtitle={`By ${post.data.author}, updated ${new Date(post.data.pubDate).toLocaleDateString('en-US', { year: 'numeric', month: 'long', day: 'numeric' })}`}
						image={post.data.image}
						tags={post.data.tags}
						price={post.data.price}
						license={post.data.license}
						git={post.data.git}
						star={post.data.star}
						web={post.data.web}
						typ={type}
						isArticle={isArticle || false}
					>
						{/* <span class="small">{post.data.description}</span> */}
					</Post>
				</Col>
			))
		}
	</Row>
</Section>
