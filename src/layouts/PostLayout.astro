---
// Imports
const { frontmatter } = Astro.props

//Layout Components
import Layout from './Layout.astro'

// Section Components
import BlogPostHero from '../components/blocks/blog/BlogPostHero.astro'

// Content
// - SEO
const SEO = {
	title: `${frontmatter.title} | Themes.`,
	description: `${frontmatter.description}`
}

console.log("frontmatter:", frontmatter)
---

<Layout title={SEO.title} description={SEO.description}>
	<BlogPostHero
		tags={frontmatter.tags}
		title={frontmatter.title}
		author={frontmatter.author}
		publishDate={frontmatter.pubDate.toLocaleDateString('en-US', {
			year: 'numeric',
			month: 'long',
			day: 'numeric'
		})}
		tp={frontmatter.type.toLowerCase()}
	/>

	<div class="border border-slate-300 border-b-0 mt-0"></div>
	<div class="post-body basic-text basic-text--lg">

		<div class="grid grid-cols-10 gap-2 mt-5 mb-6">
		  <img class="blog-img-view bg-white col-span-10 md:col-span-8 h-auto w-full max-w-full rounded-lg object-cover object-center md:h-[500px]"
			  src={frontmatter.images[0].src} 
			  alt={frontmatter.images[0].alt} />
		  <div class="grid gap-1 col-span-10 grid-cols-5 md:grid-cols-1 md:grid-rows-5 md:col-span-2 ml-auto">
			{frontmatter.images?.map( (el: any) => {
			  return(
				  <img
					src={el.src}
					class="blog-img-button border object-cover object-center h-24 w-40 max-w-full rounded-lg cursor-pointer" 
					alt={el.alt} />
			  )})}
		  </div>
		</div>
		<div class="grid grid-cols-12 gap-2 text-lg text-neutral-500 dark:text-neutral-500 dark:decoration-violet-800 mb-10">
			<div class="col-span-6 grid grid-cols-12 gap-2">
				<div class="col-span-6 bg-neutral-100 text-neutral-500 dark:bg-neutral-800 dark:text-neutral-500 text-center">{frontmatter.price}</div>
				<div class="col-span-6 bg-neutral-100 text-neutral-500 dark:bg-neutral-800 dark:text-neutral-500 text-center">{frontmatter.license}</div>
			</div>
			<div class="col-span-6 grid grid-cols-12 underline decoration-violet-300 gap-2">
				<div class="col-span-6 bg-neutral-100 text-neutral-500 dark:bg-neutral-800 dark:text-neutral-500 text-center">
					<a href={frontmatter.web} target="_blank">Demo</a>
				</div>
				<div class="col-span-6 bg-neutral-100 text-neutral-500 dark:bg-neutral-800 dark:text-neutral-500 text-center">
					<a href={frontmatter.git} target="_blank">Github</a>
				</div>
	
				<!-- <div class="col-span-6 bg-neutral-100 dark:bg-neutral-800 ml-auto mr-1 pl-2 pr-2"> -->
					<!-- <a href={"web"} target="_blank">Demo</a> -->
				<!-- </div> -->
				<!-- <div class="col-span-6 bg-neutral-100 dark:bg-neutral-800 ml-auto mr-1 pl-2 pr-2"> -->
					<!-- <a href={"git"} target="_blank">Github</a> -->
				<!-- </div> -->
			</div>
		</div>

		<slot />
	</div>
</Layout>


<script>
	/** Attaches copy buttons to code blocks in the document,
	 * allowing users to copy code easily. */
	document.addEventListener("astro:page-load", () => {
	  function attachCopyButtons() {
		const copyButtonLabel = "Copy 📋";
		const codeBlocks = Array.from(document.querySelectorAll("pre"));
  
		for (const codeBlock of codeBlocks) {
		  const wrapper = document.createElement("div");
		  wrapper.style.position = "relative";
  
		  const copyButton = document.createElement("button");
		  copyButton.className =
			"copy-code absolute right-3 -top-4 rounded bg-primary p-2 text-base leading-4 text-skin-base font-medium";
		  copyButton.innerHTML = copyButtonLabel;
		  codeBlock.setAttribute("tabindex", "0");
		  codeBlock.appendChild(copyButton);
  
		  // wrap codebock with relative parent element
		  codeBlock?.parentNode?.insertBefore(wrapper, codeBlock);
		  wrapper.appendChild(codeBlock);
  
		  copyButton.addEventListener("click", async () => {
			await copyCode({ block: codeBlock, button: copyButton });
		  });
		}
  
		async function copyCode({
		  block,
		  button,
		}: {
		  block: HTMLPreElement;
		  button: HTMLButtonElement;
		}) {
		  const code = block.querySelector("code");
		  const text = code?.innerText;
  
		  await navigator.clipboard.writeText(text ?? "");
  
		  // visual feedback that task is completed
		  button.innerText = "Copied ✅";
  
		  setTimeout(() => {
			button.innerText = copyButtonLabel;
		  }, 1000);
		}
	  }
  
	  attachCopyButtons();
  
	  // 找到页面上的组件 DOM。
	  const buttons = document.querySelectorAll('.blog-img-button');
	  const view = document.querySelectorAll('.blog-img-view');
  
	  // 当 button 被点击时，添加事件监听器来触发 confetti。
	  buttons.forEach((button) => {
		button.addEventListener('click', () => {
		  view.forEach(v => {
			if (button instanceof HTMLImageElement) {
			  v.setAttribute("src", button.src)
			}
		  })
		});
	  });
	});
  
</script>


<style>
	.post-body {
		@apply mx-auto max-w-5xl px-12 py-48 lg:py-72;
		margin-top: 0rem !important;
		padding-top: 5px !important;
	}
</style>
